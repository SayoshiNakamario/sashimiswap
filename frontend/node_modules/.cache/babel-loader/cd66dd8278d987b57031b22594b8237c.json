{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { getMasterChefContract, getWethContract, getFarms, getTotalLPWethValue } from '../sushi/utils';\nimport useYam from './useYam';\nimport useBlock from './useBlock';\n\nconst useAllStakedValue = () => {\n  const [balances, setBalance] = useState([]);\n  const {\n    account\n  } = useWallet();\n  const yam = useYam();\n  const farms = getFarms(yam);\n  const masterChefContract = getMasterChefContract(yam);\n  const wethContact = getWethContract(yam);\n  const block = useBlock();\n  const fetchAllStakedValue = useCallback(async () => {\n    const balances = await Promise.all(farms.map(({\n      pid,\n      lpContract,\n      tokenContract\n    }) => getTotalLPWethValue(masterChefContract, wethContact, lpContract, tokenContract, pid)));\n    setBalance(balances);\n  }, [account, masterChefContract, yam]);\n  useEffect(() => {\n    if (account && masterChefContract && yam) {\n      fetchAllStakedValue();\n    }\n  }, [account, block, masterChefContract, setBalance, yam]);\n  return balances;\n};\n\nexport default useAllStakedValue;","map":{"version":3,"sources":["C:/Users/Kyle/Documents/FOGmist/sashimiswap/frontend/src/hooks/useAllStakedValue.ts"],"names":["useCallback","useEffect","useState","useWallet","getMasterChefContract","getWethContract","getFarms","getTotalLPWethValue","useYam","useBlock","useAllStakedValue","balances","setBalance","account","yam","farms","masterChefContract","wethContact","block","fetchAllStakedValue","Promise","all","map","pid","lpContract","tokenContract"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAIA,SAASC,SAAT,QAA0B,YAA1B;AAGA,SACEC,qBADF,EAEEC,eAFF,EAGEC,QAHF,EAIEC,mBAJF,QAKO,gBALP;AAMA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAUA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAuDV,SAAS,EAAtE;AACA,QAAMW,GAAG,GAAGN,MAAM,EAAlB;AACA,QAAMO,KAAK,GAAGT,QAAQ,CAACQ,GAAD,CAAtB;AACA,QAAME,kBAAkB,GAAGZ,qBAAqB,CAACU,GAAD,CAAhD;AACA,QAAMG,WAAW,GAAGZ,eAAe,CAACS,GAAD,CAAnC;AACA,QAAMI,KAAK,GAAGT,QAAQ,EAAtB;AAEA,QAAMU,mBAAmB,GAAGnB,WAAW,CAAC,YAAY;AAClD,UAAMW,QAA4B,GAAG,MAAMS,OAAO,CAACC,GAAR,CACzCN,KAAK,CAACO,GAAN,CACE,CAAC;AACCC,MAAAA,GADD;AAECC,MAAAA,UAFD;AAGCC,MAAAA;AAHD,KAAD,KASElB,mBAAmB,CACjBS,kBADiB,EAEjBC,WAFiB,EAGjBO,UAHiB,EAIjBC,aAJiB,EAKjBF,GALiB,CAVvB,CADyC,CAA3C;AAqBAX,IAAAA,UAAU,CAACD,QAAD,CAAV;AACD,GAvBsC,EAuBpC,CAACE,OAAD,EAAUG,kBAAV,EAA8BF,GAA9B,CAvBoC,CAAvC;AAyBAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,IAAIG,kBAAX,IAAiCF,GAArC,EAA0C;AACxCK,MAAAA,mBAAmB;AACpB;AACF,GAJQ,EAIN,CAACN,OAAD,EAAUK,KAAV,EAAiBF,kBAAjB,EAAqCJ,UAArC,EAAiDE,GAAjD,CAJM,CAAT;AAMA,SAAOH,QAAP;AACD,CAzCD;;AA2CA,eAAeD,iBAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\r\nimport { provider } from 'web3-core'\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from 'use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\nimport {\r\n  getMasterChefContract,\r\n  getWethContract,\r\n  getFarms,\r\n  getTotalLPWethValue,\r\n} from '../sushi/utils'\r\nimport useYam from './useYam'\r\nimport useBlock from './useBlock'\r\n\r\nexport interface StakedValue {\r\n  tokenAmount: BigNumber\r\n  wethAmount: BigNumber\r\n  totalWethValue: BigNumber\r\n  tokenPriceInWeth: BigNumber\r\n  poolWeight: BigNumber\r\n}\r\n\r\nconst useAllStakedValue = () => {\r\n  const [balances, setBalance] = useState([] as Array<StakedValue>)\r\n  const { account }: { account: string; ethereum: provider } = useWallet()\r\n  const yam = useYam()\r\n  const farms = getFarms(yam)\r\n  const masterChefContract = getMasterChefContract(yam)\r\n  const wethContact = getWethContract(yam)\r\n  const block = useBlock()\r\n\r\n  const fetchAllStakedValue = useCallback(async () => {\r\n    const balances: Array<StakedValue> = await Promise.all(\r\n      farms.map(\r\n        ({\r\n          pid,\r\n          lpContract,\r\n          tokenContract,\r\n        }: {\r\n          pid: number\r\n          lpContract: Contract\r\n          tokenContract: Contract\r\n        }) =>\r\n          getTotalLPWethValue(\r\n            masterChefContract,\r\n            wethContact,\r\n            lpContract,\r\n            tokenContract,\r\n            pid,\r\n          ),\r\n      ),\r\n    )\r\n\r\n    setBalance(balances)\r\n  }, [account, masterChefContract, yam])\r\n\r\n  useEffect(() => {\r\n    if (account && masterChefContract && yam) {\r\n      fetchAllStakedValue()\r\n    }\r\n  }, [account, block, masterChefContract, setBalance, yam])\r\n\r\n  return balances\r\n}\r\n\r\nexport default useAllStakedValue\r\n"]},"metadata":{},"sourceType":"module"}