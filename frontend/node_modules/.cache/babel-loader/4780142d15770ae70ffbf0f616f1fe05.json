{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Documents\\\\FOGmist\\\\sashimiswap\\\\frontend\\\\src\\\\views\\\\Farm\\\\Farm.tsx\";\nimport React, { useMemo, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport useYam from '../../hooks/useYam';\nimport useFarm from '../../hooks/useFarm';\nimport useRedeem from '../../hooks/useRedeem';\nimport { getContract } from '../../utils/erc20';\nimport { getMasterChefContract } from '../../sushi/utils';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\n\nconst Farm = () => {\n  const {\n    farmId\n  } = useParams();\n  const {\n    pid,\n    lpToken,\n    lpTokenAddress,\n    tokenAddress,\n    earnToken,\n    name,\n    icon\n  } = useFarm(farmId) || {\n    pid: 0,\n    lpToken: '',\n    lpTokenAddress: '',\n    tokenAddress: '',\n    earnToken: '',\n    name: '',\n    icon: ''\n  };\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const yam = useYam();\n  const {\n    ethereum\n  } = useWallet();\n  const lpContract = useMemo(() => {\n    return getContract(ethereum, lpTokenAddress);\n  }, [ethereum, lpTokenAddress]);\n  const {\n    onRedeem\n  } = useRedeem(getMasterChefContract(yam));\n  const lpTokenName = useMemo(() => {\n    return lpToken.toUpperCase();\n  }, [lpToken]);\n  const earnTokenName = useMemo(() => {\n    return earnToken.toUpperCase();\n  }, [earnToken]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeader, {\n    icon: icon,\n    subtitle: `Deposit ${lpTokenName}  Tokens and earn ${earnTokenName}`,\n    title: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StyledFarm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Harvest, {\n    pid: pid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Stake, {\n    lpContract: lpContract,\n    pid: pid,\n    tokenName: lpToken.toUpperCase(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StyledInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"\\u2B50\\uFE0F Every time you stake and unstake LP tokens, the contract will automagically harvest SASHIMI rewards for you!\"), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst StyledFarm = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst StyledInfo = styled.h3`\n  color: ${props => props.theme.color.grey[400]};\n  font-size: 16px;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`;\nexport default Farm;","map":{"version":3,"sources":["C:/Users/Kyle/Documents/FOGmist/sashimiswap/frontend/src/views/Farm/Farm.tsx"],"names":["React","useMemo","useEffect","styled","useParams","useWallet","PageHeader","Spacer","useYam","useFarm","useRedeem","getContract","getMasterChefContract","Harvest","Stake","Farm","farmId","pid","lpToken","lpTokenAddress","tokenAddress","earnToken","name","icon","window","scrollTo","yam","ethereum","lpContract","onRedeem","lpTokenName","toUpperCase","earnTokenName","StyledFarm","div","StyledCardsWrapper","StyledCardWrapper","StyledInfo","h3","props","theme","color","grey"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { useWallet } from 'use-wallet'\r\nimport { provider } from 'web3-core'\r\n\r\nimport Button from '../../components/Button'\r\nimport PageHeader from '../../components/PageHeader'\r\nimport Spacer from '../../components/Spacer'\r\n\r\nimport useYam from '../../hooks/useYam'\r\nimport useFarm from '../../hooks/useFarm'\r\nimport useRedeem from '../../hooks/useRedeem'\r\nimport { getContract } from '../../utils/erc20'\r\nimport { getMasterChefContract } from '../../sushi/utils'\r\n\r\nimport Harvest from './components/Harvest'\r\nimport Stake from './components/Stake'\r\n\r\nconst Farm: React.FC = () => {\r\n  const { farmId } = useParams()\r\n  const {\r\n    pid,\r\n    lpToken,\r\n    lpTokenAddress,\r\n    tokenAddress,\r\n    earnToken,\r\n    name,\r\n    icon,\r\n  } = useFarm(farmId) || {\r\n    pid: 0,\r\n    lpToken: '',\r\n    lpTokenAddress: '',\r\n    tokenAddress: '',\r\n    earnToken: '',\r\n    name: '',\r\n    icon: '',\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const yam = useYam()\r\n  const { ethereum } = useWallet()\r\n\r\n  const lpContract = useMemo(() => {\r\n    return getContract(ethereum as provider, lpTokenAddress)\r\n  }, [ethereum, lpTokenAddress])\r\n\r\n  const { onRedeem } = useRedeem(getMasterChefContract(yam))\r\n\r\n  const lpTokenName = useMemo(() => {\r\n    return lpToken.toUpperCase()\r\n  }, [lpToken])\r\n\r\n  const earnTokenName = useMemo(() => {\r\n    return earnToken.toUpperCase()\r\n  }, [earnToken])\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        icon={icon}\r\n        subtitle={`Deposit ${lpTokenName}  Tokens and earn ${earnTokenName}`}\r\n        title={name}\r\n      />\r\n      <StyledFarm>\r\n        <StyledCardsWrapper>\r\n          <StyledCardWrapper>\r\n            <Harvest pid={pid} />\r\n          </StyledCardWrapper>\r\n          <Spacer />\r\n          <StyledCardWrapper>\r\n            <Stake\r\n              lpContract={lpContract}\r\n              pid={pid}\r\n              tokenName={lpToken.toUpperCase()}\r\n            />\r\n          </StyledCardWrapper>\r\n        </StyledCardsWrapper>\r\n        <Spacer size=\"lg\" />\r\n        <StyledInfo>\r\n          ⭐️ Every time you stake and unstake LP tokens, the contract will\r\n          automagically harvest SASHIMI rewards for you!\r\n        </StyledInfo>\r\n        <Spacer size=\"lg\" />\r\n      </StyledFarm>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledFarm = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nconst StyledInfo = styled.h3`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`\r\n\r\nexport default Farm\r\n"]},"metadata":{},"sourceType":"module"}