{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Documents\\\\FOGmist\\\\sashimiswap\\\\frontend\\\\src\\\\contexts\\\\Modals\\\\Modals.tsx\";\nimport React, { createContext, useCallback, useState } from 'react';\nimport styled from 'styled-components';\nexport const Context = createContext({\n  onPresent: () => {},\n  onDismiss: () => {}\n});\n\nconst Modals = ({\n  children\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [content, setContent] = useState();\n  const [modalKey, setModalKey] = useState();\n  const handlePresent = useCallback((modalContent, key) => {\n    setModalKey(key);\n    setContent(modalContent);\n    setIsOpen(true);\n  }, [setContent, setIsOpen, setModalKey]);\n  const handleDismiss = useCallback(() => {\n    setContent(undefined);\n    setIsOpen(false);\n  }, [setContent, setIsOpen, modalKey]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      content,\n      isOpen,\n      onPresent: handlePresent,\n      onDismiss: handleDismiss\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, children, isOpen && /*#__PURE__*/React.createElement(StyledModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledModalBackdrop, {\n    onClick: handleDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), React.isValidElement(content) && React.cloneElement(content, {\n    onDismiss: handleDismiss\n  })));\n};\n\nconst StyledModalWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: fixed;\n  top: 0; right: 0; bottom: 0; left: 0;\n`;\nconst StyledModalBackdrop = styled.div`\n  background-color: ${props => props.theme.color.grey[600]}aa;\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n`;\nexport default Modals;","map":{"version":3,"sources":["C:/Users/Kyle/Documents/FOGmist/sashimiswap/frontend/src/contexts/Modals/Modals.tsx"],"names":["React","createContext","useCallback","useState","styled","Context","onPresent","onDismiss","Modals","children","isOpen","setIsOpen","content","setContent","modalKey","setModalKey","handlePresent","modalContent","key","handleDismiss","undefined","isValidElement","cloneElement","StyledModalWrapper","div","StyledModalBackdrop","props","theme","color","grey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AASA,OAAO,MAAMC,OAAO,GAAGJ,aAAa,CAAgB;AAClDK,EAAAA,SAAS,EAAE,MAAM,CAAE,CAD+B;AAElDC,EAAAA,SAAS,EAAE,MAAM,CAAE;AAF+B,CAAhB,CAA7B;;AAKP,MAAMC,MAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC;AAEA,QAAMa,aAAa,GAAGd,WAAW,CAAC,CAACe,YAAD,EAAgCC,GAAhC,KAAiD;AACjFH,IAAAA,WAAW,CAACG,GAAD,CAAX;AACAL,IAAAA,UAAU,CAACI,YAAD,CAAV;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAJgC,EAI9B,CAACE,UAAD,EAAaF,SAAb,EAAwBI,WAAxB,CAJ8B,CAAjC;AAMA,QAAMI,aAAa,GAAGjB,WAAW,CAAC,MAAM;AACtCW,IAAAA,UAAU,CAACO,SAAD,CAAV;AACAT,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHgC,EAG9B,CAACE,UAAD,EAAaF,SAAb,EAAwBG,QAAxB,CAH8B,CAAjC;AAKA,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AACvBF,MAAAA,OADuB;AAEvBF,MAAAA,MAFuB;AAGvBJ,MAAAA,SAAS,EAAEU,aAHY;AAIvBT,MAAAA,SAAS,EAAEY;AAJY,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGV,QANH,EAOGC,MAAM,iBACL,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAES,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGnB,KAAK,CAACqB,cAAN,CAAqBT,OAArB,KAAiCZ,KAAK,CAACsB,YAAN,CAAmBV,OAAnB,EAA4B;AAC5DL,IAAAA,SAAS,EAAEY;AADiD,GAA5B,CAFpC,CARJ,CADF;AAkBD,CAlCD;;AAoCA,MAAMI,kBAAkB,GAAGnB,MAAM,CAACoB,GAAI;;;;;;;CAAtC;AASA,MAAMC,mBAAmB,GAAGrB,MAAM,CAACoB,GAAI;sBACjBE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;;;CAD3D;AAMA,eAAerB,MAAf","sourcesContent":["import React, { createContext, useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ModalsContext {\r\n  content?: React.ReactNode,\r\n  isOpen?: boolean,\r\n  onPresent: (content: React.ReactNode, key?: string) => void,\r\n  onDismiss: () => void\r\n}\r\n\r\nexport const Context = createContext<ModalsContext>({\r\n  onPresent: () => {},\r\n  onDismiss: () => {},\r\n})\r\n\r\nconst Modals: React.FC = ({ children }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [content, setContent] = useState<React.ReactNode>()\r\n  const [modalKey, setModalKey] = useState<string>()\r\n\r\n  const handlePresent = useCallback((modalContent: React.ReactNode, key?: string) => {\r\n    setModalKey(key)\r\n    setContent(modalContent)\r\n    setIsOpen(true)\r\n  }, [setContent, setIsOpen, setModalKey])\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    setContent(undefined)\r\n    setIsOpen(false)\r\n  }, [setContent, setIsOpen, modalKey])\r\n\r\n  return (\r\n    <Context.Provider value={{\r\n      content,\r\n      isOpen,\r\n      onPresent: handlePresent,\r\n      onDismiss: handleDismiss,\r\n    }}>\r\n      {children}\r\n      {isOpen && (\r\n        <StyledModalWrapper>\r\n          <StyledModalBackdrop onClick={handleDismiss} />\r\n          {React.isValidElement(content) && React.cloneElement(content, {\r\n            onDismiss: handleDismiss,\r\n          })}\r\n        </StyledModalWrapper>\r\n      )}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nconst StyledModalWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n`\r\n\r\nconst StyledModalBackdrop = styled.div`\r\n  background-color: ${props => props.theme.color.grey[600]}aa;\r\n  position: absolute;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n`\r\n\r\nexport default Modals"]},"metadata":{},"sourceType":"module"}