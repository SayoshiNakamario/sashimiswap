{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Documents\\\\FOGmist\\\\sashimiswap\\\\frontend\\\\src\\\\views\\\\Farms\\\\components\\\\FarmCards.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Countdown from 'react-countdown';\nimport { useWallet } from 'use-wallet';\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport Loader from '../../../components/Loader';\nimport Spacer from '../../../components/Spacer';\nimport useFarms from '../../../hooks/useFarms';\nimport useYam from '../../../hooks/useYam';\nimport BigNumber from 'bignumber.js';\nimport { bnToDec } from '../../../utils';\nimport { getEarned, getMasterChefContract } from '../../../sushi/utils';\nimport useAllStakedValue from '../../../hooks/useAllStakedValue';\nimport { BASIC_TOKEN } from '../../../constants/config';\n\nconst FarmCards = () => {\n  const [farms] = useFarms();\n  const {\n    account\n  } = useWallet();\n  const stakedValue = useAllStakedValue();\n  const sushiIndex = farms.findIndex(({\n    tokenSymbol\n  }) => tokenSymbol === BASIC_TOKEN);\n  const sushiPrice = sushiIndex >= 0 && stakedValue[sushiIndex] ? stakedValue[sushiIndex].tokenPriceInWeth : new BigNumber(0);\n  const BLOCKS_PER_YEAR = new BigNumber(2336000); // TODO: After block height xxxx, SUSHI_PER_BLOCK = 100;\n\n  const SASHIMI_PER_BLOCK = new BigNumber(1000);\n  const rows = farms.reduce((farmRows, farm, i) => {\n    const farmWithStakedValue = { ...farm,\n      ...stakedValue[i],\n      apy: stakedValue[i] ? sushiPrice.times(SASHIMI_PER_BLOCK).times(BLOCKS_PER_YEAR).times(stakedValue[i].poolWeight).div(stakedValue[i].totalWethValue) : null\n    };\n    const newFarmRows = [...farmRows];\n\n    if (newFarmRows[newFarmRows.length - 1].length === 3) {\n      newFarmRows.push([farmWithStakedValue]);\n    } else {\n      newFarmRows[newFarmRows.length - 1].push(farmWithStakedValue);\n    }\n\n    return newFarmRows;\n  }, [[]]);\n  return /*#__PURE__*/React.createElement(StyledCards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, !!rows[0].length ? rows.map((farmRow, i) => /*#__PURE__*/React.createElement(StyledRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, farmRow.map((farm, j) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: j,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FarmCard, {\n    farm: farm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), (j === 0 || j === 1) && /*#__PURE__*/React.createElement(StyledSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 42\n    }\n  }))))) : /*#__PURE__*/React.createElement(StyledLoadingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    text: \"Cooking the rice ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst FarmCard = ({\n  farm\n}) => {\n  const [startTime, setStartTime] = useState(0);\n  const [harvestable, setHarvestable] = useState(0);\n  const {\n    account\n  } = useWallet();\n  const {\n    lpTokenAddress\n  } = farm;\n  const yam = useYam();\n\n  const renderer = countdownProps => {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = countdownProps;\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n    const paddedHours = hours < 10 ? `0${hours}` : hours;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, paddedHours, \":\", paddedMinutes, \":\", paddedSeconds);\n  };\n\n  useEffect(() => {\n    async function fetchEarned() {\n      if (yam) return;\n      const earned = await getEarned(getMasterChefContract(yam), lpTokenAddress, account);\n      setHarvestable(bnToDec(earned));\n    }\n\n    if (yam && account) {\n      fetchEarned();\n    }\n  }, [yam, lpTokenAddress, account, setHarvestable]);\n  const poolActive = true; // startTime * 1000 - Date.now() <= 0\n\n  let farmApy;\n\n  if (farm.apy && farm.apy.isNaN()) {\n    farmApy = '- %';\n  } else {\n    farmApy = farm.apy ? `${farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1) || '-'}%` : 'Loading ...';\n  }\n\n  return /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, farm.tokenSymbol === 'SASHIMI' && /*#__PURE__*/React.createElement(StyledCardAccent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, farm.icon), /*#__PURE__*/React.createElement(StyledTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, farm.name), /*#__PURE__*/React.createElement(StyledDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledDetail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Deposit \", farm.lpToken.toUpperCase()), /*#__PURE__*/React.createElement(StyledDetail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Earn \", farm.earnToken.toUpperCase(), \" (\", farm.pool, \" Pool)\")), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !poolActive,\n    text: poolActive ? 'Select' : undefined,\n    to: `/farms/${farm.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, !poolActive && /*#__PURE__*/React.createElement(Countdown, {\n    date: new Date(startTime * 1000),\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledInsight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"APY\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, farmApy))))));\n};\n\nconst RainbowLight = keyframes`\n\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`;\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 12px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`;\nconst StyledCards = styled.div`\n  width: 900px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledLoadingWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`;\nconst StyledRow = styled.div`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing[4]}px;\n  flex-flow: row wrap;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  width: calc((900px - ${props => props.theme.spacing[4]}px * 2) / 3);\n  position: relative;\n`;\nconst StyledTitle = styled.h4`\n  color: ${props => props.theme.color.grey[600]};\n  font-size: 24px;\n  font-weight: 700;\n  margin: ${props => props.theme.spacing[2]}px 0 0;\n  padding: 0;\n`;\nconst StyledContent = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledDetails = styled.div`\n  margin-top: ${props => props.theme.spacing[2]}px;\n  text-align: center;\n`;\nconst StyledDetail = styled.div`\n  color: ${props => props.theme.color.grey[500]};\n`;\nconst StyledInsight = styled.div`\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  border-radius: 8px;\n  background: #fffdfa;\n  color: #aa9584;\n  width: 100%;\n  margin-top: 12px;\n  line-height: 32px;\n  font-size: 13px;\n  border: 1px solid #e6dcd5;\n  text-align: center;\n  padding: 0 12px;\n`;\nexport default FarmCards;","map":{"version":3,"sources":["C:/Users/Kyle/Documents/FOGmist/sashimiswap/frontend/src/views/Farms/components/FarmCards.tsx"],"names":["React","useEffect","useState","styled","keyframes","Countdown","useWallet","Button","Card","CardContent","CardIcon","Loader","Spacer","useFarms","useYam","BigNumber","bnToDec","getEarned","getMasterChefContract","useAllStakedValue","BASIC_TOKEN","FarmCards","farms","account","stakedValue","sushiIndex","findIndex","tokenSymbol","sushiPrice","tokenPriceInWeth","BLOCKS_PER_YEAR","SASHIMI_PER_BLOCK","rows","reduce","farmRows","farm","i","farmWithStakedValue","apy","times","poolWeight","div","totalWethValue","newFarmRows","length","push","map","farmRow","j","FarmCard","startTime","setStartTime","harvestable","setHarvestable","lpTokenAddress","yam","renderer","countdownProps","hours","minutes","seconds","paddedSeconds","paddedMinutes","paddedHours","width","fetchEarned","earned","poolActive","farmApy","isNaN","toNumber","toLocaleString","slice","icon","name","lpToken","toUpperCase","earnToken","pool","undefined","id","Date","RainbowLight","StyledCardAccent","StyledCards","StyledLoadingWrapper","StyledRow","props","theme","spacing","StyledCardWrapper","StyledTitle","h4","color","grey","StyledContent","StyledSpacer","StyledDetails","StyledDetail","StyledInsight"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\r\nimport { useWallet } from 'use-wallet'\r\nimport numeral from 'numeral'\r\n\r\nimport Button from '../../../components/Button'\r\nimport Card from '../../../components/Card'\r\nimport CardContent from '../../../components/CardContent'\r\nimport CardIcon from '../../../components/CardIcon'\r\nimport Loader from '../../../components/Loader'\r\nimport Spacer from '../../../components/Spacer'\r\n\r\nimport useFarms from '../../../hooks/useFarms'\r\nimport useYam from '../../../hooks/useYam'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport { Farm } from '../../../contexts/Farms'\r\n\r\nimport { bnToDec } from '../../../utils'\r\nimport { getEarned, getMasterChefContract } from '../../../sushi/utils'\r\nimport useAllStakedValue, {\r\n  StakedValue,\r\n} from '../../../hooks/useAllStakedValue'\r\n\r\nimport {BASIC_TOKEN} from '../../../constants/config';\r\n\r\ninterface FarmWithStakedValue extends Farm, StakedValue {\r\n  apy: BigNumber\r\n}\r\n\r\nconst FarmCards: React.FC = () => {\r\n  const [farms] = useFarms()\r\n  const { account } = useWallet()\r\n  const stakedValue = useAllStakedValue()\r\n\r\n  const sushiIndex = farms.findIndex(\r\n    ({ tokenSymbol }) => tokenSymbol === BASIC_TOKEN,\r\n  )\r\n\r\n  const sushiPrice =\r\n    sushiIndex >= 0 && stakedValue[sushiIndex]\r\n      ? stakedValue[sushiIndex].tokenPriceInWeth\r\n      : new BigNumber(0)\r\n\r\n  const BLOCKS_PER_YEAR = new BigNumber(2336000)\r\n  // TODO: After block height xxxx, SUSHI_PER_BLOCK = 100;\r\n  const SASHIMI_PER_BLOCK = new BigNumber(1000)\r\n\r\n  const rows = farms.reduce<FarmWithStakedValue[][]>(\r\n    (farmRows, farm, i) => {\r\n      const farmWithStakedValue = {\r\n        ...farm,\r\n        ...stakedValue[i],\r\n        apy: stakedValue[i]\r\n          ? sushiPrice\r\n              .times(SASHIMI_PER_BLOCK)\r\n              .times(BLOCKS_PER_YEAR)\r\n              .times(stakedValue[i].poolWeight)\r\n              .div(stakedValue[i].totalWethValue)\r\n          : null,\r\n      }\r\n      const newFarmRows = [...farmRows]\r\n      if (newFarmRows[newFarmRows.length - 1].length === 3) {\r\n        newFarmRows.push([farmWithStakedValue])\r\n      } else {\r\n        newFarmRows[newFarmRows.length - 1].push(farmWithStakedValue)\r\n      }\r\n      return newFarmRows\r\n    },\r\n    [[]],\r\n  )\r\n\r\n  return (\r\n    <StyledCards>\r\n      {!!rows[0].length ? (\r\n        rows.map((farmRow, i) => (\r\n          <StyledRow key={i}>\r\n            {farmRow.map((farm, j) => (\r\n              <React.Fragment key={j}>\r\n                <FarmCard farm={farm} />\r\n                {(j === 0 || j === 1) && <StyledSpacer />}\r\n              </React.Fragment>\r\n            ))}\r\n          </StyledRow>\r\n        ))\r\n      ) : (\r\n        <StyledLoadingWrapper>\r\n          <Loader text=\"Cooking the rice ...\" />\r\n        </StyledLoadingWrapper>\r\n      )}\r\n    </StyledCards>\r\n  )\r\n}\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm }) => {\r\n  const [startTime, setStartTime] = useState(0)\r\n  const [harvestable, setHarvestable] = useState(0)\r\n\r\n  const { account } = useWallet()\r\n  const { lpTokenAddress } = farm\r\n  const yam = useYam()\r\n\r\n  const renderer = (countdownProps: CountdownRenderProps) => {\r\n    const { hours, minutes, seconds } = countdownProps\r\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\r\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\r\n    const paddedHours = hours < 10 ? `0${hours}` : hours\r\n    return (\r\n      <span style={{ width: '100%' }}>\r\n        {paddedHours}:{paddedMinutes}:{paddedSeconds}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchEarned() {\r\n      if (yam) return\r\n      const earned = await getEarned(\r\n        getMasterChefContract(yam),\r\n        lpTokenAddress,\r\n        account,\r\n      )\r\n      setHarvestable(bnToDec(earned))\r\n    }\r\n    if (yam && account) {\r\n      fetchEarned()\r\n    }\r\n  }, [yam, lpTokenAddress, account, setHarvestable])\r\n\r\n  const poolActive = true // startTime * 1000 - Date.now() <= 0\r\n\r\n  let farmApy:any;\r\n  if (farm.apy && farm.apy.isNaN()) {\r\n    farmApy = '- %';\r\n  } else {\r\n    farmApy = farm.apy\r\n        ? `${farm.apy\r\n            .times(new BigNumber(100))\r\n            .toNumber()\r\n            .toLocaleString('en-US')\r\n            .slice(0, -1) || '-' }%`\r\n        : 'Loading ...';\r\n  }\r\n\r\n  return (\r\n    <StyledCardWrapper>\r\n      {farm.tokenSymbol === 'SASHIMI' && <StyledCardAccent />}\r\n      <Card>\r\n        <CardContent>\r\n          <StyledContent>\r\n            <CardIcon>{farm.icon}</CardIcon>\r\n            <StyledTitle>{farm.name}</StyledTitle>\r\n            <StyledDetails>\r\n              <StyledDetail>Deposit {farm.lpToken.toUpperCase()}</StyledDetail>\r\n              <StyledDetail>Earn {farm.earnToken.toUpperCase()} ({farm.pool} Pool)</StyledDetail>\r\n            </StyledDetails>\r\n            <Spacer />\r\n            <Button\r\n              disabled={!poolActive}\r\n              text={poolActive ? 'Select' : undefined}\r\n              to={`/farms/${farm.id}`}\r\n            >\r\n              {!poolActive && (\r\n                <Countdown\r\n                  date={new Date(startTime * 1000)}\r\n                  renderer={renderer}\r\n                />\r\n              )}\r\n            </Button>\r\n            <StyledInsight>\r\n              <span>APY</span>\r\n              <span>\r\n                {farmApy}\r\n              </span>\r\n              {/* <span>\r\n                {farm.tokenAmount\r\n                  ? (farm.tokenAmount.toNumber() || 0).toLocaleString('en-US')\r\n                  : '-'}{' '}\r\n                {farm.tokenSymbol}\r\n              </span>\r\n              <span>\r\n                {farm.wethAmount\r\n                  ? (farm.wethAmount.toNumber() || 0).toLocaleString('en-US')\r\n                  : '-'}{' '}\r\n                ETH\r\n              </span> */}\r\n            </StyledInsight>\r\n          </StyledContent>\r\n        </CardContent>\r\n      </Card>\r\n    </StyledCardWrapper>\r\n  )\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 12px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst StyledCards = styled.div`\r\n  width: 900px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledLoadingWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledRow = styled.div`\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n  flex-flow: row wrap;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  width: calc((900px - ${(props) => props.theme.spacing[4]}px * 2) / 3);\r\n  position: relative;\r\n`\r\n\r\nconst StyledTitle = styled.h4`\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  margin: ${(props) => props.theme.spacing[2]}px 0 0;\r\n  padding: 0;\r\n`\r\n\r\nconst StyledContent = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledDetail = styled.div`\r\n  color: ${(props) => props.theme.color.grey[500]};\r\n`\r\n\r\nconst StyledInsight = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-sizing: border-box;\r\n  border-radius: 8px;\r\n  background: #fffdfa;\r\n  color: #aa9584;\r\n  width: 100%;\r\n  margin-top: 12px;\r\n  line-height: 32px;\r\n  font-size: 13px;\r\n  border: 1px solid #e6dcd5;\r\n  text-align: center;\r\n  padding: 0 12px;\r\n`\r\n\r\nexport default FarmCards\r\n"]},"metadata":{},"sourceType":"module"}