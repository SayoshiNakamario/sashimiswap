{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Documents\\\\FOGmist\\\\sashimiswap\\\\frontend\\\\src\\\\components\\\\Value\\\\Value.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport CountUp from 'react-countup';\nimport styled from 'styled-components';\n\nconst Value = ({\n  value,\n  decimals\n}) => {\n  const [start, updateStart] = useState(0);\n  const [end, updateEnd] = useState(0);\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end);\n      updateEnd(value);\n    }\n  }, [value]);\n  return /*#__PURE__*/React.createElement(StyledValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, typeof value == 'string' ? value : /*#__PURE__*/React.createElement(CountUp, {\n    start: start,\n    end: end,\n    decimals: decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3,\n    duration: 1,\n    separator: \",\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst StyledValue = styled.div`\n  font-family: 'Roboto Mono', monospace;\n  color: ${props => props.theme.color.grey[600]};\n  font-size: 36px;\n  font-weight: 700;\n`;\nexport default Value;","map":{"version":3,"sources":["C:/Users/Kyle/Documents/FOGmist/sashimiswap/frontend/src/components/Value/Value.tsx"],"names":["React","useState","useEffect","CountUp","styled","Value","value","decimals","start","updateStart","end","updateEnd","undefined","StyledValue","div","props","theme","color","grey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC3D,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBR,QAAQ,CAAC,CAAD,CAArC;AACA,QAAM,CAACS,GAAD,EAAMC,SAAN,IAAmBV,QAAQ,CAAC,CAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,OAAOI,KAAP,KAAiB,QAArB,EAA+B;AAC7BG,MAAAA,WAAW,CAACC,GAAD,CAAX;AACAC,MAAAA,SAAS,CAACL,KAAD,CAAT;AACD;AACF,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;AAOA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,OAAOA,KAAP,IAAgB,QAAhB,GACCA,KADD,gBAGC,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,GAAG,EAAEE,GAFP;AAGE,IAAA,QAAQ,EACNH,QAAQ,KAAKK,SAAb,GAAyBL,QAAzB,GAAoCG,GAAG,GAAG,CAAN,GAAU,CAAV,GAAcA,GAAG,GAAG,GAAN,GAAY,CAAZ,GAAgB,CAJtE;AAME,IAAA,QAAQ,EAAE,CANZ;AAOE,IAAA,SAAS,EAAC,GAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAiBD,CA5BD;;AA8BA,MAAMG,WAAW,GAAGT,MAAM,CAACU,GAAI;;WAEnBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;;;CAFlD;AAOA,eAAeb,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport CountUp from 'react-countup'\r\n\r\nimport styled from 'styled-components'\r\n\r\ninterface ValueProps {\r\n  value: string | number\r\n  decimals?: number\r\n}\r\n\r\nconst Value: React.FC<ValueProps> = ({ value, decimals }) => {\r\n  const [start, updateStart] = useState(0)\r\n  const [end, updateEnd] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (typeof value === 'number') {\r\n      updateStart(end)\r\n      updateEnd(value)\r\n    }\r\n  }, [value])\r\n\r\n  return (\r\n    <StyledValue>\r\n      {typeof value == 'string' ? (\r\n        value\r\n      ) : (\r\n        <CountUp\r\n          start={start}\r\n          end={end}\r\n          decimals={\r\n            decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3\r\n          }\r\n          duration={1}\r\n          separator=\",\"\r\n        />\r\n      )}\r\n    </StyledValue>\r\n  )\r\n}\r\n\r\nconst StyledValue = styled.div`\r\n  font-family: 'Roboto Mono', monospace;\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`\r\n\r\nexport default Value\r\n"]},"metadata":{},"sourceType":"module"}